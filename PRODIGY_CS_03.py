# -*- coding: utf-8 -*-
"""Prodigy_CS_03

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QTKR8Ddu5XSuIWMa0ZpR1oqG3zFLfVjJ
"""

import re

def password_complexity_checker(password):
    # Initialize complexity score
    score = 0
    feedback = []

    # Criteria 1: Length check
    if len(password) >= 8:
        score += 1
    else:
        feedback.append("Password is too short. Use at least 8 characters.")

    # Criteria 2: Uppercase and Lowercase letters
    if re.search(r'[A-Z]', password) and re.search(r'[a-z]', password):
        score += 1
    else:
        feedback.append("Password should include both uppercase and lowercase letters.")

    # Criteria 3: Digits (Numbers)
    if re.search(r'[0-9]', password):
        score += 1
    else:
        feedback.append("Password should include at least one number.")

    # Criteria 4: Special characters
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 1
    else:
        feedback.append("Password should include at least one special character (e.g., @, #, $, etc.).")

    # Feedback on overall strength
    if score == 4:
        return "Password is Strong.", feedback
    elif score == 3:
        return "Password is Medium.", feedback
    else:
        return "Password is Weak.", feedback

# Input password from the user
password = input("Enter a password to check its complexity: ")

# Check password complexity
strength, suggestions = password_complexity_checker(password)

# Output the result
print(f"\nPassword Strength: {strength}")
if suggestions:
    print("\nSuggestions to improve your password:")
    for suggestion in suggestions:
        print(f"- {suggestion}")